<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 配置包扫描器 -->
	<!--配置扫描service层的bean -->
	<!--interface是接口，service模块是实现类，直接扫描service层的话会扫描下面的impl包的 -->
	<context:component-scan base-package="com.aia.service" />

	<!-- 配置一个httpSolrServer对象 -->
	<bean class="org.apache.solr.client.solrj.impl.HttpSolrServer" id="solrServer">
		<constructor-arg index="0"
			value="http://192.168.25.128:9080/solr"></constructor-arg>
	</bean>
	<!-- 使用dubbo发布服务 -->
	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="e3-search" />
	<!--这里指的是Linux的IP和端口号 -->
	<dubbo:registry protocol="zookeeper" address="192.168.25.128:2181" />
	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20884" />
	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="com.aia.service.SeachItemService"
		ref="seachItemServiceImpl" timeout="600000" />

<!--配置扫描mybatis映射文件所在的包-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--以后dao层会打包成一个jar放置到web的lib文件夹下，所以路径是不会变化的-->
		<property name="basePackage" value="com.aia.service.mapper" />
	</bean>

</beans>